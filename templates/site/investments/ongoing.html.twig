{% extends 'base.html.twig' %}

{% block title %}Mes Investissements en cours{% endblock %}

{% block body %}
    <h1 class="text-center my-5">Mes Investissements en cours</h1>

    <div class="container my-4 card-like">
        <div class="mb-3">
            <input type="search" id="investment-search" class="form-control rounded-pill" placeholder="Rechercher un investissement...">
        </div>
        
        <div class="table-responsive">
            <table class="table table-striped table-hover align-middle">
                <thead id="investments-table-head">
                    <tr>
                        <th scope="col" class="text-start">Nom</th>
                        <th scope="col" class="text-center">Capital initial</th>
                        <th scope="col" class="text-center">Capital remboursé</th>
                        <th scope="col" class="text-center">Total intérêts reçus</th>
                        <th scope="col" class="text-center">Intérêt/mois</th>
                        <th scope="col" class="text-center">Mois restants</th>
                        <th scope="col" class="text-center">Début</th>
                        <th scope="col" class="text-center">Fin</th>
                        <th scope="col" class="text-center">Remboursements</th>
                    </tr>
                </thead>
                <tbody id="investments-table-body">
                    {% for investment in investments %}
                        <tr>
                            <td data-name="{{ investment.name }}">{{ investment.name }}</td>
                            <td data-startingCapital="{{ investment.startingCapital }}" class="text-center">
                                <span class="badge bg-primary rounded-pill">{{ investment.startingCapital / 100 }} €</span>
                            </td>
                            <td data-capitalAlreadyReceived="{{ investment.capitalAlreadyReceived }}" class="text-center">
                                <span class="badge bg-success rounded-pill">{{ investment.capitalAlreadyReceived / 100 }} €</span>
                            </td>
                            <td data-totalInterestReceived="{{ investment.totalInterestReceived }}" class="text-center">
                                <span class="badge bg-warning rounded-pill">{{ investment.totalInterestReceived / 100 }} €</span>
                            </td>
                            <td data-interestByMonth="{{ investment.interestByMonth }}" class="text-center">
                                <span class="badge bg-info rounded-pill">{{ investment.interestByMonth / 100 }} €</span>
                            </td>
                            <td data-remainingMonths="{% if investment.getRemainingMonths() == 'Terminé' %}-1{% else %}{{ investment.getRemainingMonths() }}{% endif %}" class="text-center">
                                {% set remainingMonths = investment.getRemainingMonths() %}
                                {% if remainingMonths == 'Terminé' %}
                                    <span class="badge bg-danger rounded-pill">{{ remainingMonths }}</span>
                                {% else %}
                                    <span class="badge bg-secondary rounded-pill">{{ remainingMonths }} mois</span>
                                {% endif %}
                            </td>
                            <td data-startAt="{{ investment.startAt|date('Y-m-d') }}" class="text-center">{{ investment.startAt ? investment.startAt|date('d/m/Y') : 'N/A' }}</td>
                            <td data-endAt="{{ investment.endAt|date('Y-m-d') }}" class="text-center">{{ investment.endAt ? investment.endAt|date('d/m/Y') : 'N/A' }}</td>
                            <td class="text-center">
                                {% if investment.earlyRepayments is not empty %}
                                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#earlyRepaymentModal" data-investment-id="{{ investment.id }}">
                                        Voir
                                    </button>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    {# La modale est toujours la même #}
    <div class="modal fade" id="earlyRepaymentModal" tabindex="-1" aria-labelledby="earlyRepaymentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="earlyRepaymentModalLabel">Remboursements Anticipés</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <ul class="list-group" id="repayments-list">
                        {# Le contenu sera inséré ici par le JavaScript #}
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <style>
        /* Nouvelles classes pour une meilleure UX */
        .card-like {
            background-color: #ffffff;
            border-radius: 1rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            padding: 1.5rem;
        }
    </style>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const investments = JSON.parse('{{ investmentsJson|raw }}');
            
            const earlyRepaymentModal = document.getElementById('earlyRepaymentModal');
            
            earlyRepaymentModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget; 
                const investmentId = button.getAttribute('data-investment-id');
                const investment = investments.find(inv => inv.id == investmentId);

                const repaymentsList = document.getElementById('repayments-list');
                repaymentsList.innerHTML = '';

                if (investment && investment.earlyRepayments.length > 0) {
                    investment.earlyRepayments.forEach(repayment => {
                        const listItem = document.createElement('li');
                        listItem.className = 'list-group-item d-flex flex-column'; 

                        const formattedValue = (repayment.value / 100).toFixed(2);
                        const formattedCapital = (repayment.remainingCapital / 100).toFixed(2);
                        const formattedInterest = (repayment.remainingInterestByMonth / 100).toFixed(2);
                        const formattedDate = new Date(repayment.createdAt).toLocaleDateString('fr-FR');

                        listItem.innerHTML = `
                            <div class="d-flex justify-content-between align-items-center mb-1">
                                <span class="fw-bold fs-5">${formattedValue} €</span>
                                <span class="text-muted small">${formattedDate}</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center text-muted small">
                                <span>Capital restant : ${formattedCapital} €</span>
                                <span>Intérêt/mois : ${formattedInterest} €</span>
                            </div>
                        `;
                        repaymentsList.appendChild(listItem);
                    });
                } else {
                    repaymentsList.innerHTML = '<li class="list-group-item text-center text-muted">Aucun remboursement anticipé.</li>';
                }
            });

            // Logique de recherche
            const searchInput = document.getElementById('investment-search');
            const investmentsTableBody = document.getElementById('investments-table-body');
            const tableRows = investmentsTableBody.querySelectorAll('tr');

            searchInput.addEventListener('input', (e) => {
                const searchTerm = e.target.value.toLowerCase();

                tableRows.forEach(row => {
                    const rowText = row.textContent.toLowerCase();
                    if (rowText.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
        });
    </script>
{% endblock %}
